version: '3.9'
services:
  garage_backend:
    image: garage_backend:latest
    container_name: garage_backend
    build:
      context: ./images/garage_backend
      dockerfile: Dockerfile
      target: ${ENVIRONMENT}
    ports:
      - "8000:8000"
    env_file:
      - .env
    stdin_open: true
    tty: true
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
      - ./images/garage_backend:/home/app/web  # Mount source code for live reload
    depends_on:
      - database
      - redis
    networks:
      - default
      - internal_local_network
    command: >
      bash -c "python manage.py runserver 0.0.0.0:8000"

  garage_front:
    image: garage_front:latest
    container_name: garage_front
    build:
      context: ./images/garage_front
      dockerfile: Dockerfile
    ports:
      - "5173:5173"  # Frontend exposed here (can also be 3000 etc.)
    depends_on:
      - garage_backend
    networks:
      - default
      - internal_local_network
    volumes:
      - ./images/garage_front:/app  # Mount source code for live reload
      - /app/node_modules  # Preserve node_modules to avoid conflicts
    environment:
      - VITE_HOST=0.0.0.0  # Ensure Vite binds to all interfaces
      - VITE_PORT=5173     # Ensure Vite uses the correct port
      - VITE_HMR=true      # Enable hot module replacement
    command: >
      npm run dev

  database:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/initdb.sh:/docker-entrypoint-initdb.d/initdb.sh
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
    networks:
      - default
      - internal_local_network

  nginx-proxy:
    build:
      context: ./images/nginx
      dockerfile: Dockerfile
    ports:
      - "443:443"  # Map to standard HTTPS port (requires root or capability)
      - "80:80"    # Add HTTP port for redirection
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./images/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./images/nginx/nginx-certs:/home/naruto/nginx-certs:ro
    depends_on:
      - garage_backend
    env_file:
      - .env.nginx
    networks:
      - default
      - internal_local_network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"  # Expose Redis on this port for development
    volumes:
      - cache_data:/data
    networks:
      - default
      - internal_local_network

volumes:
  static_volume:
  media_volume:
  postgres_data:
  cache_data:
  nginx-certs:
  vhost:

networks:
  default:
  internal_local_network:
    driver: bridge
